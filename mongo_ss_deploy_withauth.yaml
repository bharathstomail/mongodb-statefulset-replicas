apiVersion: v1
kind: Service
metadata:
  name: mongo
  labels:
    name: mongo
spec:
  ports:
  - name: mongo
    port: 27017
    targetPort: 27017
  clusterIP: None
  selector:
    role: mongo
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
spec:
  serviceName: "mongo"
  selector:
    matchLabels:
      role: mongo
  replicas: 3
  template:
    metadata:
      labels:
        role: mongo
        environment: test
    spec:
      terminationGracePeriodSeconds: 10
      volumes:
        - name: my-mongo-config
          configMap:
            name: my-mongo-config
        - name: my-mongo-ssl-certs
          secret:
            secretName: my-mongo-ssl-certs
      containers:
        - name: mongo
          image: mongo
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: "role=demoadmin"
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: "demopwd123"
            - name: MONGO_INITDB_DATABASE
              value: admin
          command:
            - mongod
            - "--bind_ip_all"
            - "--replSet"
            - rs0
            - "--sslMode"
            - "requireSSL"
            - "--sslPEMKeyFile"
            - "/etc/ssl/mongodb.pem"
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongo-data1
              mountPath: /data/db
            - name: my-mongo-config
              mountPath: /etc/mongo
            - name: my-mongo-ssl-certs
              mountPath: /etc/ssl
  volumeClaimTemplates:
  - metadata:
      name: mongo-data1
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "managed-premium"
      resources:
        requests:
          storage: 1Gi
